@page
@model LastWeekViewModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Last Week's View";
    string errorMessage = ViewData["ErrorMessage"] as string;
    string TotalTime = Model.TotalTime;

    // Calculate the current date
    var currentDate = DateTime.Today;

    // Calculate the start of the previous week (Monday of last week)
    var startOfLastWeek = currentDate.AddDays(-(int)currentDate.DayOfWeek - 7);

    // Create an array for the days of the last week
    var lastWeekDays = Enumerable.Range(0, 7)
                                 .Select(i => startOfLastWeek.AddDays(i))
                                 .ToArray();

    // Determine the last 3 days including the current day
    var editableDays = Enumerable.Range(0, 4) // Start from 0 to include the current day
                                  .Select(i => currentDate.AddDays(-i))
                                  .ToHashSet(); // Using HashSet for faster lookup
}

<link href="~/css/site.css" rel="stylesheet" />
<h2>Last Week's View - Total Hours: @TotalTime</h2>

<!-- Error Message Display (Red Square) -->
@if (!string.IsNullOrEmpty(errorMessage) && errorMessage != "Success")
{
    <div class="error-message">
        <p>@errorMessage</p>
    </div>
}

<!-- Calendar Layout for Last Week -->
<div class="calendar-container">
    @foreach (var day in lastWeekDays)
    {
        <div class="day @(day == currentDate ? "current-day" : "")">
            <div class="date">@day.ToString("dddd, MMM dd")</div>
            <div class="time-entries">
                @if (Model.TimeSlots.Any(ts => ts.TSDate.Date == day.Date))
                {
                    @foreach (var entry in Model.TimeSlots.Where(ts => ts.TSDate.Date == day.Date))
                    {
                        <div class="time-entry">
                            <p><strong>Time:</strong>
                                @{
                                    // Assuming TSDuration is in minutes as a double (e.g., 90.5 minutes)
                                    double totalMinutes = entry.TSDuration;
                                    int hours = (int)(totalMinutes / 60);
                                    int minutes = (int)(totalMinutes % 60);

                                    // Format the time as HH:MM
                                    string timeFormatted = $"{hours:D2}:{minutes:D2}";
                                }
                                @timeFormatted
                            </p>
                            <p><strong>Description:</strong> @entry.TSDescription</p>
                        </div>
                    }
                }
                else
                {
                    <p>No time entries yet.</p>
                }
            </div>

            <!-- Disable Edit Button if no Time Slot -->
            @if (editableDays.Contains(day.Date) && Model.TimeSlots.Any(ts => ts.TSDate.Date == day.Date))
            {
                <button class="edit-btn" onclick="openEditPopup('@day.ToString("dddd, MMM dd")')">Edit Time Slot</button>
            }
            else
            {
                <button class="edit-btn" disabled>Edit Time Slot</button>
                <p class="info-text">Editing is disabled for this date.</p>
            }

            @if (editableDays.Contains(day.Date)) // Check if the day is editable
            {
                <button class="add-btn" onclick="openAddPopup('@day.ToString("yyyy-MM-dd")')">Add Time Slot</button>
            }
            else
            {
                <p class="info-text">Adding/editing time slots is disabled for this date.</p>
            }
        </div>
    }
</div>

<style>
    .time-entry {
        word-wrap: break-word;
        white-space: normal;
        overflow-wrap: break-word;
    }
</style>

<!-- Add Popup -->
<div id="addPopup" class="popup" style="display:none;">
    <div class="popup-content">
        <span class="close" onclick="closeAddPopup()">&times;</span>
        <h3>Add Time Entry for <span id="addDate"></span></h3>
        <form method="post" asp-page-handler="AddTimeSlot">
            <input type="hidden" id="selectedDate" name="SelectedDate" />
            <div class="form-group">
                <label for="addTime">Time (HH:MM):</label>
                <input type="text" id="addTime" name="AddTime" placeholder="HH:MM" required pattern="^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$" title="Please enter a valid time in HH:MM format." />
            </div>

            <div class="form-group">
                <label for="addDescription">Description:</label>
                <textarea id="addDescription" name="AddDescription" rows="3" required></textarea>
            </div>

            <div class="form-group">
                <button type="submit" class="btn">Save Changes</button>
            </div>
        </form>
    </div>
</div>

<!-- Edit Popup -->
<div id="editPopup" class="popup" style="display:none;">
    <div class="popup-content">
        <span class="close" onclick="closeEditPopup()">&times;</span>
        <h3>Edit Time Entry for <span id="editDate"></span></h3>
        <form method="post" asp-page-handler="EditTimeSlot">
            <input type="hidden" id="editDateInput" name="SelectedDate" />
            <div class="form-group">
                <label for="editTime">Time (HH:MM):</label>
                <input type="text" id="editTime" name="UpdatedTime" placeholder="HH:MM" required 
                       pattern="^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$" 
                       title="Please enter a valid time in HH:MM format." />
            </div>
            <div class="form-group">
                <label for="editDescription">Description:</label>
                <textarea id="editDescription" name="UpdatedDescription" rows="3" required></textarea>
            </div>
            <div class="form-group">
                <button type="submit" class="btn">Save Changes</button>
            </div>
        </form>
    </div>
</div>

<!-- JavaScript for Popup -->
<script>
    function openEditPopup(date) {
            document.getElementById("editDate").textContent = date;
            document.getElementById("editDateInput").value = date;
            document.getElementById("editPopup").style.display = "block";
        }

        function closeEditPopup() {
            document.getElementById("editPopup").style.display = "none";
        }

    function openAddPopup(date) {
        document.getElementById("addPopup").style.display = "block";
        document.getElementById("addDate").textContent = date;  
        document.getElementById("selectedDate").value = date; 
    }

    function closeAddPopup() {
        document.getElementById("addPopup").style.display = "none";
    }
</script>

<style>
    .error-message {
    background-color: rgb(233, 167, 167);
    border-color: rgb(214, 87, 87);
    color: rgb(0, 0, 0);
    padding: 10px;
    margin: 5px 0;
    border-radius: 8px;
    font-weight: bold;
    text-align: center;
}
</style>
