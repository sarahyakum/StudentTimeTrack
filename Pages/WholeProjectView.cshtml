@page
@model WholeProjectViewModel

<!-- Written by Kiara Vaz for CS4385.0W1, , Senior Design Project, Started October 3, 2024 -->
<!-- Net ID: KMV200000 -->

@{
    Layout = "_Layout";
    ViewData["Title"] = "Whole Project View";

    string TotalTime = Model.TotalTime;
    var currentDate = DateTime.Today;
    int month = Model.SelectedMonth;
    int year = Model.SelectedYear;
    DateTime firstDayOfMonth = new DateTime(year, month, 1);
    int daysInMonth = DateTime.DaysInMonth(year, month);
    var daysOfMonth = Enumerable.Range(1, daysInMonth).Select(day => new DateTime(year, month, day)).ToArray();

    // Get the project start and end dates
    DateTime projectStartDate = Model.ProjectStartDate;
    DateTime projectEndDate = Model.ProjectEndDate;
    bool isBeforeProjectStart = new DateTime(year, month, 1) < projectStartDate;
    bool isAfterProjectEnd = new DateTime(year, month, 1) >= projectEndDate;
}

<h2>Whole Project View - Total Hours: @TotalTime </h2>
<link rel="stylesheet" href="~/css/popupentry.css" />


<div class="month-navigation">
    <form method="get">
        <input type="hidden" name="year" value="@year" />
        <input type="hidden" name="month" value="@month" />
        <button name="change" value="prev" @(isBeforeProjectStart ? "disabled" : "")>&lt; Previous Month</button>
        <h3>@firstDayOfMonth.ToString("MMMM yyyy")</h3>
        <button name="change" value="next" @(isAfterProjectEnd ? "disabled" : "")>Next Month &gt;</button>
    </form>
</div>

<div class="calendar-container">
    @foreach (var day in daysOfMonth)
    {
        var entriesForDay = Model.TimeSlots.Where(ts => ts.TSDate.Date == day.Date).ToList();

        string dayClass = day.Date == projectStartDate || day.Date == projectEndDate ? "highlight-start-end" : "";

        <div class="day @(day == DateTime.Today ? "current-day" : "") @dayClass">
            <div class="date">@day.ToString("dddd, MMM dd")</div>
            <div class="time-entries">
                @if (entriesForDay.Any())
                {
                    @foreach (var entry in entriesForDay)
                    {
                        double totalMinutes = entry.TSDuration;
                        int hours = (int)(totalMinutes / 60);
                        int minutes = (int)(totalMinutes % 60);
                        string timeFormatted = $"{hours:D2}:{minutes:D2}";
                        string truncatedDescription = entry.TSDescription.Length > 50
                            ? entry.TSDescription.Substring(0, 50) + "..."
                            : entry.TSDescription;

                        <div class="timeslot-entry" onclick="openPopup('@entry.TSDescription')">
                            <p><strong>Time:</strong> @timeFormatted</p>
                            <p><strong>Description:</strong> @truncatedDescription</p>
                        </div>
                    }
                }
                else
                {
                    <p>No time entries.</p>
                }
            </div>
        </div>
    }
</div>

<div class="popup-entry">
    <div class="popup-content">
        <span class="close" onclick="closePopup()">&times;</span>
        <p><strong>Time:</strong> <span id="popup-time"></span></p>
        <p><strong>Description:</strong> <span id="popup-description"></span></p>
    </div>
</div>


<div id="popupOverlay" class="popup-overlay" onclick="closePopup()"></div>

   <script>
        function openPopup(description) {
            const popup = document.querySelector(".popup-entry");
            const overlay = document.querySelector(".popup-overlay");
            const descriptionElement = document.getElementById("popup-description");
            
            descriptionElement.textContent = description;
            popup.classList.add("show");
            overlay.style.display = "block";
        }

        function closePopup() {
            const popup = document.querySelector(".popup-entry");
            const overlay = document.querySelector(".popup-overlay");
            
            popup.classList.remove("show");
            overlay.style.display = "none";
        }
    </script>

